{"ast":null,"code":"import axios from \"axios\";\nimport { ActionType } from \"../action-types\";\nexport const searchRepositories = term => {\n  return async dispatch => {\n    dispatch({\n      type: ActionType.SEARCH_REPOSITORIES\n    });\n\n    try {\n      const {\n        data\n      } = await axios.get(\"http://registry.npmjs.org/-/v1/search\", {\n        params: {\n          text: term\n        }\n      });\n      const names = data.objects.map(result => {\n        return result.package.name;\n      });\n      dispatch({\n        type: ActionType.SEARCH_REPOSITORIES_SUCCESS,\n        payload: names\n      });\n    } catch (err) {\n      dispatch({\n        type: ActionType.SEARCH_REPOSITORIES_ERROR,\n        payload: err.message\n      });\n    }\n  };\n};","map":{"version":3,"names":["axios","ActionType","searchRepositories","term","dispatch","type","SEARCH_REPOSITORIES","data","get","params","text","names","objects","map","result","package","name","SEARCH_REPOSITORIES_SUCCESS","payload","err","SEARCH_REPOSITORIES_ERROR","message"],"sources":["C:/Users/mynam/OneDrive/Desktop/react-typescript-redux-search-feature/src/state/action-creators/index.ts"],"sourcesContent":["import axios from \"axios\";\r\nimport { ActionType } from \"../action-types\";\r\nimport { Dispatch } from \"redux\";\r\nimport { Action } from \"../actions\";\r\n\r\nexport const searchRepositories = (term: string) => {\r\n\r\n    return async (dispatch: Dispatch<Action>) => {\r\n        dispatch({\r\n            type: ActionType.SEARCH_REPOSITORIES\r\n        });\r\n\r\n        try {\r\n\r\n            const { data } = await axios.get(\"http://registry.npmjs.org/-/v1/search\", {\r\n                params: {\r\n                    text: term\r\n                }\r\n            });\r\n\r\n            const names = data.objects.map((result: any):string => {\r\n                return result.package.name\r\n            })\r\n            dispatch({\r\n                type: ActionType.SEARCH_REPOSITORIES_SUCCESS,\r\n                payload: names,\r\n            })\r\n\r\n        } catch (err: any) {\r\n            dispatch({\r\n                type: ActionType.SEARCH_REPOSITORIES_ERROR,\r\n                payload: err.message,\r\n            });\r\n        }\r\n\r\n    }\r\n}"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,iBAA3B;AAIA,OAAO,MAAMC,kBAAkB,GAAIC,IAAD,IAAkB;EAEhD,OAAO,MAAOC,QAAP,IAAsC;IACzCA,QAAQ,CAAC;MACLC,IAAI,EAAEJ,UAAU,CAACK;IADZ,CAAD,CAAR;;IAIA,IAAI;MAEA,MAAM;QAAEC;MAAF,IAAW,MAAMP,KAAK,CAACQ,GAAN,CAAU,uCAAV,EAAmD;QACtEC,MAAM,EAAE;UACJC,IAAI,EAAEP;QADF;MAD8D,CAAnD,CAAvB;MAMA,MAAMQ,KAAK,GAAGJ,IAAI,CAACK,OAAL,CAAaC,GAAb,CAAkBC,MAAD,IAAwB;QACnD,OAAOA,MAAM,CAACC,OAAP,CAAeC,IAAtB;MACH,CAFa,CAAd;MAGAZ,QAAQ,CAAC;QACLC,IAAI,EAAEJ,UAAU,CAACgB,2BADZ;QAELC,OAAO,EAAEP;MAFJ,CAAD,CAAR;IAKH,CAhBD,CAgBE,OAAOQ,GAAP,EAAiB;MACff,QAAQ,CAAC;QACLC,IAAI,EAAEJ,UAAU,CAACmB,yBADZ;QAELF,OAAO,EAAEC,GAAG,CAACE;MAFR,CAAD,CAAR;IAIH;EAEJ,CA5BD;AA6BH,CA/BM"},"metadata":{},"sourceType":"module"}